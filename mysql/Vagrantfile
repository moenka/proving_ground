require_relative '../.plugins/key_authorization'

Vagrant.configure('2') do |config|

  config.vm.provider "libvirt"
  config.vm.provider "virtualbox"

  authorize_key_for_root config, '~/.ssh/id_rsa.pub'
  config.hostmanager.enabled = true
  config.hostmanager.manage_host = true
  config.hostmanager.manage_guest = true
  config.hostmanager.ignore_private_ip = false
  config.hostmanager.include_offline = false
  config.hostmanager.ip_resolver = proc do |vm, resolving_vm|
    if hostname = (vm.ssh_info && vm.ssh_info[:host])
      ip = nil
      command = "ip addr show dev eth1 | grep -oP 'inet [0-9\.]+' | head -n1 2>&1"
      vm.communicate.sudo(command) do |type, data|
        ip = data.split("\n").first[/(\d+\.\d+\.\d+\.\d+)/, 1]
      end
      ip
    end
  end

  HOSTNAME = 'mysql'
  N = 2

  (1..N).each do |machine_id|
    config.vm.define "#{HOSTNAME}#{machine_id}" do |host|
      host.vm.box = 'centos/7'
      host.vm.network 'private_network', type: 'dhcp'
      host.vm.hostname = "#{HOSTNAME}#{machine_id}.vagrant"
    end
  end

  config.vm.provision :ansible do |ansible|
    ansible.compatibility_mode = '2.0'
    ansible.playbook = 'ansible/bootstrap.yml'
  end
  config.vm.provision :ansible do |ansible|
    ansible.compatibility_mode = '2.0'
    ansible.groups = {
      'all:vars' => {
        'mariadb_bind_address' => '0.0.0.0',
        'mariadb_innodb_log_file_size' => '5M',
        'mariadb_service' => 'mysql',
        'mariadb_table_open_cache_instances' => false,
        'mariadb_version' => '5.5',
      }
    }
    ansible.playbook = 'ansible/site.yml'
  end
end

